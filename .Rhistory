#coeffs<-lm(den.log~pop.log,data=dat.both)$coefficients
#coeffs.rev<-lm(pop.log~den.log,data=dat.both)$coefficients
#slope.rev<-1/coeffs.rev[2]
#intercept.rev<- (-coeffs.rev[1])/coeffs.rev[2]
#g<-g + geom_abline(slope=coeffs[2],intercept=coeffs[1],color="blue")
#g<-g +  geom_abline(slope=slope.rev,intercept=intercept.rev, color="orange")
#g
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(ggplot2)
# We load our datasets, clean them and join them into a single dataframe, for easier handling
Tot_Pop <- read.csv("./TotalPopulation1960to2020.csv")
Tot_Pop$DATE <- as.numeric(format(as.Date(Tot_Pop$DATE), "%Y"))
CPI <- read.csv("./FPCPITOTLZGUSA.csv")
CPI$DATE <- as.numeric(format(as.Date(CPI$DATE), "%Y"))
crimes <- read.csv("./crimes.csv")
names(crimes)[11] = "Larceny theft"
names(crimes)[12] = "Vehicle theft"
crimes <- filter(crimes,Year <= 2015)
Tot_Pop <- filter(Tot_Pop,DATE <= 2015)
CPI <- filter(CPI,DATE <= 2015)
# Rape statistics cannot be trusted, as prior to 2016, the FBI included only female-reported rapes, and from 2016 and forward, they included both male and female reported rapes.
# Therefore, we cannot use it for our analysis, as it shows a massive jump in reports.
dat <- cbind(CPI, Tot_Pop$POPTOTUSA647NWDB, crimes[,3:ncol(crimes)])
# Now we can remove the original datasets to avoid memory issues
rm(CPI)
rm(Tot_Pop)
rm(crimes)
# We rename some columns for easier handling
names(dat)[1:3] = c("Date", "CPI", "Tot_Pop")
# Now, we get additional derived metrics which might be helpful
inf_rate <- dat$CPI[2:nrow(dat)] - dat$CPI[1:nrow(dat)-1]
inf_rate <- inf_rate / dat$CPI[1:nrow(dat)-1]
inf_rate <- inf_rate * 100
inf_rate <- c(mean(inf_rate), inf_rate)
crime_percentage <- dat$Total/dat$Tot_Pop * 100
dat <- cbind(dat, inf_rate, crime_percentage)
# Finally, we should remove outliers. For example, inflation for most years stays within 100%, except for some years, in which inflation reached over 500%.
mean_inf_rate <- mean(dat$inf_rate)
sd_inf_rate <- sd(dat$inf_rate)
# We will use only data that is within 3 standard deviations for the inflation rate
dat <- filter(dat, between(inf_rate, -3*sd_inf_rate, 3*sd_inf_rate))
head(dat)
# With the previously obtained information, we can visualize tot_crime vs inflation
#ggplot(data= dat, mapping = aes(x = inf_rate, y = Total))+
#  geom_point()
ggplot(data= dat, mapping = aes(x = inf_rate, y = Total))+
geom_hline(yintercept = min(dat$Total),color="gray")+
geom_line()
ggplot(data= dat, mapping = aes(x = inf_rate, y = crime_percentage))+
geom_hline(yintercept = min(dat$crime_percentage),color="gray")+
geom_line()
ggplot(data= dat, mapping = aes(x = inf_rate, y = Property))+
geom_hline(yintercept = min(dat$Property),color="gray")+
geom_vline(xintercept = mean(dat$inf_rate),color="red")+
geom_line()
ggplot(data= dat, mapping = aes(x = inf_rate, y = Property/Total))+
geom_hline(yintercept = min(dat$Property / dat$Total),color="gray")+
geom_line()
#coeffs<-lm(den.log~pop.log,data=dat.both)$coefficients
#coeffs.rev<-lm(pop.log~den.log,data=dat.both)$coefficients
#slope.rev<-1/coeffs.rev[2]
#intercept.rev<- (-coeffs.rev[1])/coeffs.rev[2]
#g<-g + geom_abline(slope=coeffs[2],intercept=coeffs[1],color="blue")
#g<-g +  geom_abline(slope=slope.rev,intercept=intercept.rev, color="orange")
#g
coeffs <- lm(crime_percentage~inf_rate)
coeffs
coeffs <- lm(crime_percentage~inf_rate)$coefficients
g <- ggplot(data= dat, mapping = aes(x = inf_rate, y = crime_percentage))
g<-g +  geom_abline(slope=1/coeffs[2],intercept=(-coeffs.rev[1])/coeffs.rev[2], color="orange")
g<-g +  geom_abline(slope=1/coeffs[2],intercept=(-coeffs[1])/coeffs[2], color="orange")
g
